name: SonarQube

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install dotnet-coverage
        shell: powershell
        run: |
          dotnet tool install --global dotnet-coverage
      
      - name: Begin SonarQube analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"bookbuddy" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml" /d:sonar.javascript.lcov.reportPaths="frontend/coverage/lcov.info" /d:sonar.exclusions="**/Database/Migrations/**"

      - name: Build the solution
        shell: powershell
        run: |
          dotnet build "D:\a\bookbuddy\bookbuddy\.net_backend\bookbuddy_api.sln" --no-incremental

      - name: Run .NET tests and collect coverage
        shell: powershell
        run: |
          dotnet-coverage collect "dotnet test .net_backend/Unit_Tests/Unit_Tests.csproj --filter FullyQualifiedName!~webapi&FullyQualifiedName!~database" -f xml -o "coverage.xml"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: ./vue_frontend
        run: |
          npm install

      - name: Run Jest tests and collect coverage
        working-directory: ./vue_frontend
        run: |
          npm run test -- --coverage
          
      - name: Move Jest coverage report to expected location
        working-directory: ./vue_frontend
        run: |
          if (Test-Path -Path "coverage") {
            if (Test-Path -Path "coverage/lcov.info") {
              mv coverage/lcov.info ../coverage/lcov.info
            } else {
              Write-Error "lcov.info not found in the coverage directory"
            }
          } else {
            Write-Error "Coverage directory not found"
          }

      - name: End SonarQube analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
