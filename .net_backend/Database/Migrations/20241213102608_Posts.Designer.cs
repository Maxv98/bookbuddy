// <auto-generated />
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(BookbuddyContext))]
    [Migration("20241213102608_Posts")]
    partial class Posts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookbuddyModelPostModel", b =>
                {
                    b.Property<int>("SavedByBookbuddiesId")
                        .HasColumnType("int");

                    b.Property<int>("SavedPostsId")
                        .HasColumnType("int");

                    b.HasKey("SavedByBookbuddiesId", "SavedPostsId");

                    b.HasIndex("SavedPostsId");

                    b.ToTable("BookbuddySavedPosts", (string)null);
                });

            modelBuilder.Entity("Interfaces.Models.BookbuddyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutMe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Bookbuddies");
                });

            modelBuilder.Entity("Interfaces.Models.PostModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookbuddyId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookbuddyId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BookbuddyModelPostModel", b =>
                {
                    b.HasOne("Interfaces.Models.BookbuddyModel", null)
                        .WithMany()
                        .HasForeignKey("SavedByBookbuddiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Interfaces.Models.PostModel", null)
                        .WithMany()
                        .HasForeignKey("SavedPostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Interfaces.Models.PostModel", b =>
                {
                    b.HasOne("Interfaces.Models.BookbuddyModel", "Bookbuddy")
                        .WithMany("Posts")
                        .HasForeignKey("BookbuddyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bookbuddy");
                });

            modelBuilder.Entity("Interfaces.Models.BookbuddyModel", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
